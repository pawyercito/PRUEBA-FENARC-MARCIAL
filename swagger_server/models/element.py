# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Element(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, idBulk: int=None, retries: int=None, status: int=None, name: str=None):  # noqa: E501
        """Element - a model defined in Swagger

        :param id: The id of this Element.  # noqa: E501
        :type id: int
        :param idBulk: The idBulk of this Element.  # noqa: E501
        :type idBulk: int
        :param retries: The retries of this Element.  # noqa: E501
        :type retries: int
        :param status: The status of this Element.  # noqa: E501
        :type status: int
        :param name: The name of this Element.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'id': int,
            'idBulk': int,
            'retries': int,
            'status': int,
            'name': str
        }

        self.attribute_map = {
            'id': 'id',
            'idBulk': 'idBulk',
            'retries': 'retries',
            'status': 'status',
            'name': 'name'
        }
        self._id = id
        self._idBulk = idBulk
        self._retries = retries
        self._status = status
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Element':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Element of this Element.  # noqa: E501
        :rtype: Element
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Element.


        :return: The id of this Element.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Element.


        :param id: The id of this Element.
        :type id: int
        """

        self._id = id

    @property
    def idBulk(self) -> int:
        """Gets the idBulk of this Element.


        :return: The idBulk of this Element.
        :rtype: int
        """
        return self._idBulk

    @idBulk.setter
    def idBulk(self, idBulk: int):
        """Sets the idBulk of this Element.


        :param idBulk: The idBulk of this Element.
        :type idBulk: int
        """

        self._idBulk = idBulk

    @property
    def retries(self) -> int:
        """Gets the retries of this Element.


        :return: The retries of this Element.
        :rtype: int
        """
        return self._retries

    @retries.setter
    def retries(self, retries: int):
        """Sets the retries of this Element.


        :param retries: The retries of this Element.
        :type retries: int
        """

        self._retries = retries

    @property
    def status(self) -> int:
        """Gets the status of this Element.


        :return: The status of this Element.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this Element.


        :param status: The status of this Element.
        :type status: int
        """

        self._status = status

    @property
    def name(self) -> str:
        """Gets the name of this Element.


        :return: The name of this Element.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Element.


        :param name: The name of this Element.
        :type name: str
        """

        self._name = name
